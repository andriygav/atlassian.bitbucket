events {
    worker_connections  1024;
}

http {
  server {
    listen  80 default_server;
    listen  [::]:80;
    server_name bitbucket.domain.com;
    return  301 https://$server_name$request_uri;
  }

  server {

    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name bitbucket.domain.com;


    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    ssl_session_timeout  5m;

    ssl_protocols  SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers   on;

    location / {
      proxy_pass http://bitbucket:7990;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
      client_max_body_size 10M;
    }
  }

  server {
    server_name nginx;
    client_max_body_size    100M;
    proxy_connect_timeout   360;
    proxy_send_timeout      360;
    proxy_read_timeout      360;
    send_timeout            360;

    location = /health {
      access_log off;
      add_header 'Content-Type' 'application/json';
      return 200 '{"status":"UP"}';
    }

  }
}